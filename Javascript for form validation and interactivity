Steps for Implementing JavaScript Form Validation and Interactivity
HTML Structure: Create the basic HTML form structure where users can input their information.

CSS Styling: Optional, but you can use CSS to style error messages and valid inputs.

JavaScript for Validation: Implement JavaScript functions to validate form fields, handle events, and provide feedback.

Interactivity: Make the form interactive by showing or hiding error messages dynamically, changing styles, and providing confirmation once the form is successfully submitted.

Example Implementation
1. HTML Structure
    <!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Form Validation Example</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <form id="userForm">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required>
    <span id="nameError" class="error"></span><br><br>

    <label for="email">Email:</label>
    <input type="email" id="email" name="email" required>
    <span id="emailError" class="error"></span><br><br>

    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>
    <span id="passwordError" class="error"></span><br><br>

    <label for="age">Age:</label>
    <input type="number" id="age" name="age" required>
    <span id="ageError" class="error"></span><br><br>

    <button type="submit">Submit</button>
  </form>

  <script src="script.js"></script>
</body>
</html>


      2. CSS Styling (Optional)
          .error {
  color: red;
  font-size: 12px;
}

input:valid {
  border: 2px solid green;
}

input:invalid {
  border: 2px solid red;
}

input {
  margin-bottom: 10px;
}
      3. JavaScript for Validation and Interactivity
            // script.js

document.getElementById("userForm").addEventListener("submit", function(event) {
  event.preventDefault(); // Prevent form submission

  // Clear previous error messages
  clearErrors();

  // Validate fields
  let isValid = true;

  // Validate name (cannot be empty)
  const name = document.getElementById("name").value;
  if (!name) {
    showError("nameError", "Name is required");
    isValid = false;
  }

  // Validate email (basic email validation)
  const email = document.getElementById("email").value;
  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
  if (!email || !emailRegex.test(email)) {
    showError("emailError", "Please enter a valid email");
    isValid = false;
  }

  // Validate password (min length of 8 characters)
  const password = document.getElementById("password").value;
  if (password.length < 8) {
    showError("passwordError", "Password must be at least 8 characters");
    isValid = false;
  }

  // Validate age (must be a number greater than 18)
  const age = document.getElementById("age").value;
  if (isNaN(age) || age < 18) {
    showError("ageError", "You must be at least 18 years old");
    isValid = false;
  }

  // If all validations pass, show success message
  if (isValid) {
    alert("Form submitted successfully!");
    // You can submit the form or perform other actions here
  }
});

function clearErrors() {
  // Clear previous error messages and input highlights
  const errorMessages = document.querySelectorAll(".error");
  errorMessages.forEach(error => error.textContent = "");
  
  const inputs = document.querySelectorAll("input");
  inputs.forEach(input => input.style.border = "none");
}

function showError(elementId, message) {
  const errorElement = document.getElementById(elementId);
  errorElement.textContent = message;

  const inputElement = document.getElementById(elementId.replace("Error", ""));
  inputElement.style.border = "2px solid red";
}



